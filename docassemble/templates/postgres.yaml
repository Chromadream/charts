{{- if .Values.inClusterPostgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresImage }}
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-postgres-config
            - secretRef:
                name: {{ .Release.Name }}-postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "10"]
          resources:
            requests:
              memory: "{{ .Values.resources.postgres.requests.memory }}"
              cpu: "{{ .Values.resources.postgres.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.postgres.limits.memory }}"
              cpu: "{{ .Values.resources.postgres.limits.cpu }}"
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pv-claim
      terminationGracePeriodSeconds: 60
{{- end }}
